<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="apple-touch-icon" sizes="180x180" href="../assets/photos/brand/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="../assets/photos/brand/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="../assets/photos/brand/favicon-16x16.png">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <link rel="stylesheet" href="../assets/css/style.css">
  <link rel="stylesheet" href="../assets/css/login.css">
  <link rel="stylesheet" href="../assets/css/profile.css">
  <title>User Profile</title>
</head>

<body>
  <%- include('sidebar', { currentPage: 'User Profile' }) %>

    <div class="home-container">
      <h2>Welcome, <span class="greet-username"><%= user.fullName %></span>!</h2>
    <div class="login-container">
      <div class="form-container">
        <p class="title">Profile</p>
      <form action="/update-profile" onsubmit="showToast('Profile edited!')" class="form" method="POST">
        <div class="input-group">
          <label for="username">Username:</label>
        <input type="text" id="username" name="username" value="<%= user.username %>" disabled required>
        </div>
        <div class="input-group">
          <label for="password">Password:</label>
        <input type="password" id="password" name="password" value="<%= user.password %>" disabled required>
        </div><br>
        <div class="profile-btn">
          <button type="button" class="sign" id="editProfileButton">Edit Profile</button>
        <button type="submit" class="sign" id="saveProfileButton" disabled>Save</button>
        </div>
      </form>
      </div>
    </div>
    <div class="delete-button-container">
      <button class="delete-button" id="deleteAccountButton" title="Delete my Account">
        <div class="icon">
            <svg class="top">
                <use xlink:href="#top">
            </svg>
            <svg class="bottom">
                <use xlink:href="#bottom">
            </svg>
        </div>
        <span>Delete</span>
    </button>
    
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="top">
            <path d="M15,4 C15.5522847,4 16,4.44771525 16,5 L16,6 L18.25,6 C18.6642136,6 19,6.33578644 19,6.75 C19,7.16421356 18.6642136,7.5 18.25,7.5 L5.75,7.5 C5.33578644,7.5 5,7.16421356 5,6.75 C5,6.33578644 5.33578644,6 5.75,6 L8,6 L8,5 C8,4.44771525 8.44771525,4 9,4 L15,4 Z M14,5.25 L10,5.25 C9.72385763,5.25 9.5,5.47385763 9.5,5.75 C9.5,5.99545989 9.67687516,6.19960837 9.91012437,6.24194433 L10,6.25 L14,6.25 C14.2761424,6.25 14.5,6.02614237 14.5,5.75 C14.5,5.50454011 14.3231248,5.30039163 14.0898756,5.25805567 L14,5.25 Z"></path>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="bottom">
            <path d="M16.9535129,8 C17.4663488,8 17.8890201,8.38604019 17.9467852,8.88337887 L17.953255,9.02270969 L17.953255,9.02270969 L17.5309272,18.3196017 C17.5119599,18.7374363 17.2349366,19.0993109 16.8365446,19.2267053 C15.2243631,19.7422351 13.6121815,20 12,20 C10.3878264,20 8.77565288,19.7422377 7.16347932,19.226713 C6.76508717,19.0993333 6.48806648,18.7374627 6.46907425,18.3196335 L6.04751853,9.04540766 C6.02423185,8.53310079 6.39068134,8.09333626 6.88488406,8.01304774 L7.02377738,8.0002579 L16.9535129,8 Z M9.75,10.5 C9.37030423,10.5 9.05650904,10.719453 9.00684662,11.0041785 L9,11.0833333 L9,16.9166667 C9,17.2388328 9.33578644,17.5 9.75,17.5 C10.1296958,17.5 10.443491,17.280547 10.4931534,16.9958215 L10.5,16.9166667 L10.5,11.0833333 C10.5,10.7611672 10.1642136,10.5 9.75,10.5 Z M14.25,10.5 C13.8703042,10.5 13.556509,10.719453 13.5068466,11.0041785 L13.5,11.0833333 L13.5,16.9166667 C13.5,17.2388328 13.8357864,17.5 14.25,17.5 C14.6296958,17.5 14.943491,17.280547 14.9931534,16.9958215 L15,16.9166667 L15,11.0833333 C15,10.7611672 14.6642136,10.5 14.25,10.5 Z"></path>
        </symbol>
    </svg>
    </div>
    </div>
    <script>
//       document.querySelectorAll(".delete-button").forEach(button =>
//   button.addEventListener("click", e => {
//     if (!button.classList.contains("delete")) {
//       button.classList.add("delete");

//       setTimeout(() => button.classList.remove("delete"), 2200);
//     }
//     e.preventDefault();
//   })
// );

      // Get the delete button element
      const deleteAccountButton = document.getElementById('deleteAccountButton');
    
      // Function to handle the delete action
      const handleDeleteAccount = () => {

          // Show a confirmation dialog
          const isConfirmed = confirm('Are you sure you want to delete your account? This action cannot be undone.');
    
          if (isConfirmed) {

      // Add a CSS class to trigger the animation
      deleteAccountButton.classList.add('delete');
            // If the user confirms, send a DELETE request to the server
            setTimeout(() => {
              fetch('/delete-account', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              // Include credentials if needed (e.g., for cookies)
              credentials: 'include',
            })
            .then((response) => {
              if (response.ok) {
                // Redirect to the login page or any other appropriate page
                window.location.href = '/login';
              } else {
                console.error('Account deletion request failed');
                showToast("Account deletion failed")
              }
            })
            .catch((error) => {
              console.error('Error deleting account:', error);
            });
          }, 2200)
          }
      }
    
      // Add a click event listener to the delete button
      deleteAccountButton.addEventListener('click', handleDeleteAccount);
    </script>
    
    <script>
      // profile edit disable-enable
const editProfileButton = document.getElementById('editProfileButton');
  const saveProfileButton = document.getElementById('saveProfileButton');
  const usernameInput = document.getElementById('username');
  const passwordInput = document.getElementById('password');

  // Flag to track the state (enabled or disabled)
  let isEditing = false;

  // Add a click event listener to the "Edit Profile" button
  editProfileButton.addEventListener('click', () => {
    if (isEditing) {
      // If currently editing, disable the form elements
      usernameInput.setAttribute('disabled', true);
      passwordInput.setAttribute('disabled', true);
      saveProfileButton.setAttribute('disabled', true);
      editProfileButton.textContent = "Edit Profile";
      isEditing = false;
    } else {
      // If not currently editing, enable the form elements
      usernameInput.removeAttribute('disabled');
      passwordInput.removeAttribute('disabled');
      saveProfileButton.removeAttribute('disabled');
      editProfileButton.textContent = "Cancel";
      isEditing = true;
    }
  });
    </script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="../assets/js/app.js"></script>
    <script src="../assets/js/script.js"></script>
</body>

</html>